"use strict";

const test = require('ava');

const {
  decode
} = require('ini');

const {
  getFileFromContainer
} = require('./util');

const DEFAULT_CONFIG = {
  network: 'main'
};

const mergeConfig = config => ({ ...DEFAULT_CONFIG,
  ...config
});

const getOptions = async config => {
  const factomdConf = await getFileFromContainer('factomd.conf', mergeConfig(config));
  return decode(factomdConf).app;
};

const getArgs = async config => {
  const startupScript = await getFileFromContainer('start.sh', mergeConfig(config));
  console.log(startupScript);
};

const optionTest = (yamlName, optionName, config, valueOverride) => test(`${yamlName} -> ${optionName}`, async t => {
  const options = await getOptions(config);
  t.is(valueOverride || config[yamlName], options[optionName]);
});

const argTest = (yamlName, argName, config, valueOverride) => test(`${yamlName} -> ${argName}`, async t => {
  const args = await getArgs(config);
  t.is(valueOverride || config[yamlName], args[optionName]);
});

optionTest('apiPassword', 'FactomdRpcPass', {
  apiPassword: 'password',
  apiUser: 'username'
});
optionTest('apiPort', 'PortNumber', {
  apiPort: 1234
}, '1234');
optionTest('apiUser', 'FactomdRpcUser', {
  apiPassword: 'password',
  apiUser: 'username'
});
argTest('faultTimeoutInSeconds', 'faulttimeout', {
  faultTimeoutInSeconds: 123
});
//# sourceMappingURL=/Users/jay/code/factomd-docker/node_modules/.cache/ava/580db30aa231071207c17d18c6701894.js.map