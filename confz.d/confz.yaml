defaultValues:
  - ./confz.d/defaults.js
values:
  - ./config
valuesSchema:
  additionalProperties: false
  definitions:
    base64Id:
      type: string
      pattern: '^[0-9a-fA-F]{64}$'
    ipAddressAndPort:
      type: string
      pattern: '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):(102[5-9]|10[3-9][0-9]|1[1-9][0-9]{2}|[2-9][0-9]{3}|[1-5][0-9]{4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$'
    pemData:
      type: string
      pattern: '^-{5}BEGIN [A-Z]([A-Z ]*[A-Z])?-{5}[\n\r]{1,2}(([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?[\n\r]{1,2})+-{5}END [A-Z]([A-Z ]*[A-Z])?-{5}$'
    tcpPort:
      type: integer
      minimum: 1025
      maximum: 65535
  dependencies:
    apiPassword:
      - apiUser
    apiUser:
      - apiPassword
    serverPrivateKey:
      - identityChainId
      - serverPublicKey
    serverPublicKey:
      - identityChainId
      - serverPrivateKey
    tlsPrivateKey:
      - tlsPublicCert
    tlsPublicCert:
      - tlsPrivateKey
  properties:
    apiPassword:
      type: string
      description: Password for API port basic authentication
    apiPort:
      $ref: '#/definitions/tcpPort'
      description: TCP port to which the API server should bind
    apiUser:
      type: string
      description: User name for API port basic authentication
    brainSwapHeight:
      type: integer
      minimum: 0
    controlPanelSetting:
      type: string
      enum:
        - disabled
        - readonly
        - readwrite
    controlPanelPort:
      $ref: '#/definitions/tcpPort'
    corsDomains:
      type: array
      items:
        type: string
      minItems: 1
      uniqueItems: true
      oneOf:
        - items:
            const: '*'
          maxItems: 1
        - items:
            format: hostname
    customBootstrapIdentity:
      $ref: '#/definitions/base64Id'
    customBootstrapKey:
      $ref: '#/definitions/base64Id'
    customNetworkId:
      type: string
    customNetworkPort:
      $ref: '#/definitions/tcpPort'
    customSeedUrl:
      type: string
      format: uri
    customSpecialPeers:
      type: array
      items:
        $ref: '#/definitions/ipAddressAndPort'
      minItems: 1
      uniqueItems: true
    directoryBlockInSeconds:
      type: integer
      minimum: 0
    exchangeRateAuthorityPublicKey:
      $ref: '#/definitions/base64Id'
    exclusive:
      type: boolean
    exclusiveIn:
      type: boolean
    fastBoot:
      type: boolean
    faultTimeout:
      type: integer
      minimum: 0
    identityChainId:
      $ref: '#/definitions/base64Id'
    localNetworkPort:
      $ref: '#/definitions/tcpPort'
    localSeedUrl:
      type: string
      format: uri
    localSpecialPeers:
      type: array
      items:
        $ref: '#/definitions/ipAddressAndPort'
      minItems: 1
      uniqueItems: true
    logLevel:
      type: string
      enum:
        - none
        - debug
        - info
        - warning
        - error
        - fatal
        - panic
    mainNetworkPort:
      $ref: '#/definitions/tcpPort'
    mainSeedUrl:
      type: string
      format: uri
    mainSpecialPeers:
      type: array
      items:
        $ref: '#/definitions/ipAddressAndPort'
      minItems: 1
      uniqueItems: true
    network:
      type: string
      enum:
        - custom
        - local
        - main
        - test
    networkProfile:
      type: string
      enum:
        - mainnet
        - testnet
    nodeName:
      type: string
    p2pBroadcastNumber:
      type: integer
      minimum: 1
    roleProfile:
      type: string
      enum:
        - authority
        - follower
    serverPrivateKey:
      $ref: '#/definitions/base64Id'
    serverPublicKey:
      $ref: '#/definitions/base64Id'
    startDelay:
      type: integer
      minimum: 0
    testNetworkPort:
      $ref: '#/definitions/tcpPort'
    testSeedUrl:
      type: string
      format: uri
    testSpecialPeers:
      type: array
      items:
        $ref: '#/definitions/ipAddressAndPort'
      minItems: 1
      uniqueItems: true
    tlsEnabled:
      type: boolean
    tlsPrivateKey:
      $ref: '#/definitions/pemData'
    tlsPublicCert:
      $ref: '#/definitions/pemData'
  required:
    - identityChainId
    - network
  type: object
