defaultValues:
  - ./confz.d/defaults.js
values:
  - ./config
valuesSchema:
  additionalProperties: false
  definitions:
#    16BitInteger:
#      type: integer
#      minimum: 0
#      maximum: 65535
    block:
      type: integer
      minimum: 0
      maximum: 9999999
    duration:
      type: string
      pattern: '^\d+(?:ms|s|m|h|d)$'
    hexId:
      type: string
      pattern: '^[0-9a-fA-F]{64}$'
    hostname:
      type: string
      format: hostname
    ipAddressAndPort:
      type: string
      pattern: '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):(102[5-9]|10[3-9][0-9]|1[1-9][0-9]{2}|[2-9][0-9]{3}|[1-5][0-9]{4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$'
    pemData:
      type: string
      pattern: '^-{5}BEGIN((?: [A-Z]+)*)-{5}(\r?\n)(?:(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?\2)+-{5}END\1-{5}\2?$'
    unprivilegedPort:
      type: integer
      minimum: 1025
      maximum: 65535
    uri:
      type: string
      format: uri
  dependencies:
    identityPrivateKey:
      - identityPublicKey
    identityPublicKey:
      - identityPrivateKey
    webPassword:
      - webUsername
    webTLSPrivateKey:
      - webTLSCertificate
    webTLSCertificate:
      - webTLSPrivateKey
    webUsername:
      - webPassword
  properties:
    apiPort:
      allOf:
        - $ref: '#/definitions/unprivilegedPort'
      description: 'The API server listen port. [PortNumber]'
    blockTime:
      allOf:
        - $ref: '#/definitions/duration'
      description: 'The length of the directory block. [DirectoryBlockInSeconds]'
    bootstrapIdentity:
      allOf:
        - $ref: '#/definitions/hexId'
      description: 'The identity that signed the genesis block. [${Network}BootstrapIdentity]'
    bootstrapKey:
      allOf:
        - $ref: '#/definitions/hexId'
      description: 'The key that signed the genesis block. [${Network}BootstrapKey]'
    controlPanel:
      type: string
      enum:
        - DISABLED
        - READONLY
        - READWRITE
      description: 'Controls the behavior of the Control Panel. [ControlPanelSetting]'
    controlPanelName:
      type: string
      maxlength: 20
      description: 'The display name of the node on the control panel. [nodename]'
    controlPanelPort:
      allOf:
        - $ref: '#/definitions/unprivilegedPort'
      description: 'The Control Panel server listen port. [ControlPanelPort]'
    dbFastBoot:
      type: boolean
      description: 'Enable the use of the FastBoot file to cache block validation. [FastBoot]'
    factoshiExchangeRateChain:
      allOf:
        - $ref: '#/definitions/hexId'
      description: 'The chain id for FER updates. [ExchangeRateChainId]'
    factoshiExchangeRatePublicKey:
      allOf:
        - $ref: '#/definitions/hexId'
      description: 'The public key that validates entries to the FER chain. [ExchangeRateAuthorityPublicKey]'
    faultTimeout:
      allOf:
        - $ref: '#/definitions/duration'
      description: 'How long to wait for authority nodes before faulting them. [faulttimeout]'
    identityActivationHeight:
      allOf:
        - $ref: '#/definitions/block'
      description: 'The block height at which a brain swap will occur. [ChangeAcksHeight]'
    identityChain:
      allOf:
        - $ref: '#/definitions/hexId'
      description: 'Identification chain for the server. [IdentityChainID]'
    identityPrivateKey:
      allOf:
        - $ref: '#/definitions/hexId'
      description: '[LocalServerPrivKey]'
    identityPublicKey:
      allOf:
        - $ref: '#/definitions/hexId'
      description: '[LocalServerPublicKey]'
    logLevel:
      type: string
      enum:
        - NONE
        - DEBUG
        - INFO
        - WARNING
        - ERROR
        - CRITICAL
        - ALERT
        - EMERGENCY
      description: 'Controls the verbosity of log output. [loglvl]'
    network:
      type: string
      oneOf:
        - enum:
            - LOCAL
            - MAIN
        - pattern: '^[a-z_]+$'
      description: 'The network to connect to. [Network/customnet]'
    p2pMode:
      type: string
      enum:
        - NORMAL
        - ACCEPT
        - REFUSE
      description: 'Controls which peers the node should allow.. [exclusive/exclusiveIn]'
    p2pPort:
      allOf:
        - $ref: '#/definitions/unprivilegedPort'
      description: 'The peer-to-peer port. [${Network}NetworkPort]'
    p2pSeed:
      allOf:
        - $ref: '#/definitions/uri'
      description: 'The peer-to-peer seed URL. [${Network}SeedURL]'
    p2pSpecialPeers:
      type: array
      items:
        $ref: '#/definitions/ipAddressAndPort'
      minItems: 1
      uniqueItems: true
      description: 'The peer-to-peer special peers list. [${Network}SpecialPeers]'
    startDelay:
      allOf:
        - $ref: '#/definitions/duration'
      description: 'Seconds before message processing is started. [startdelay]'
    webCORS:
      type: array
      items:
        type: string
      minItems: 1
      uniqueItems: true
      oneOf:
        - items:
            const: '*'
          maxItems: 1
        - items:
            $ref: '#/definitions/hostname'
      description: 'Configures CORS for the API port. Accepts one or more allowed hostnames or a single wildcard `*`. [CorsDomains]'
    webPassword:
      type: string
      description: 'The basic authentication password for the API and Control Panel ports. [FactomdRpcPass]'
    webTLS:
      type: boolean
      description: 'Enables TLS on both the API and Control Panel ports. [FactomdTlsEnabled]'
    webTLSPrivateKey:
      allOf:
        - $ref: '#/definitions/pemData'
      description: 'Private key used to enable TLS on the API and Control Panel ports. [FactomdTlsPrivateKey]'
    webTLSCertificate:
      allOf:
        - $ref: '#/definitions/pemData'
      description: 'Public certificate used to enable TLS on the API and Control Panel ports. [FactomdTlsPublicCert]'
    webUsername:
      type: string
      description: 'The basic authentication username for the API and Control Panel ports. [FactomdRpcUser]'
  required:
    - network
  type: object

#    broadcastNumber:
#      allOf:
#        - $ref: '#/definitions/16BitInteger'
#      minimum: 1
#      description: 'Number of peers to broadcast to in the peer to peer networking. [broadcastnum]'
